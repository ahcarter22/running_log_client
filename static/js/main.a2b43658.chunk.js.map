{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/shared/RunForm.js","api/runs.js","components/runs/CreateRun.js","components/runs/IndexRuns.js","components/runs/ShowRun.js","components/runs/UpdateRun.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","authenticatedOptions","unauthenticatedOptions","alwaysOptions","exact","Header","Navbar","bg","expand","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","password","SignUp","handleChange","event","target","name","value","onSignUp","preventDefault","msgAlert","history","setUser","password_confirmation","passwordConfirmation","then","res","push","catch","error","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","Button","withRouter","SignIn","onSignIn","SignOut","clearUser","headers","Authorization","token","signOut","finally","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","RunForm","run","handleSubmit","distance","shoe","difficult","showRun","CreateRun","createRun","err","IndexRuns","runs","indexRuns","console","log","runJsx","length","map","ShowRun","handleDelete","match","deleteRun","params","owner","onClick","UpdateRun","userInput","currState","updateRun","App","msgAlerts","filter","msg","uuid","path","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a2b43658.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          user ? <Component {...props} /> : <Redirect to='/' />\n        }\n      />\n    )\n  }\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './AutoDismissAlert.scss'\n\nclass AutoDismissAlert extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      show: true\n    }\n    this.timeoutId = null\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(this.handleClose, 5000)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeoutId)\n  }\n\nhandleClose = () => this.setState({ show: false })\n\nrender () {\n  const { variant, heading, message, deleteAlert, id } = this.props\n\n  // Delete this alert after the fade animation time (300 ms by default)\n  if (!this.state.show) {\n    setTimeout(() => {\n      deleteAlert(id)\n    }, 300)\n  }\n\n  return (\n    <Alert\n      dismissible\n      show={this.state.show}\n      variant={variant}\n      onClose={this.handleClose}>\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n}\n\nexport default AutoDismissAlert\n","import React, { Fragment } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { Link, NavLink } from 'react-router-dom'\n\n// JSX defines the NavLinks for our user when they are signed in\nconst authenticatedOptions = (\n  <Fragment>\n    <NavLink to='/create-run' className='nav-link'>Create Run</NavLink>\n    <NavLink to='/runs' className='nav-link'>View Runs</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n  </Fragment>\n)\n\nconst unauthenticatedOptions = (\n  <Fragment>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </Fragment>\n)\n\nconst alwaysOptions = (\n  <Fragment>\n    <NavLink exact to='/' className='nav-link'>Home</NavLink>\n  </Fragment>\n)\n// Accepts 1 prop - the user object (App State)\nconst Header = ({ user }) => (\n  <Navbar bg='primary' variant='dark' expand='md'>\n    <Navbar.Brand>\n      <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>Running Log</Link>\n    </Navbar.Brand>\n    <Navbar.Toggle aria-controls='basic-navbar-nav' />\n    <Navbar.Collapse id='basic-navbar-nav'>\n      <Nav className='ml-auto'>\n        {user && (\n          <span className='navbar-text mr-2'>Welcome, {user.email}</span>\n        )}\n        {alwaysOptions}\n        {user ? authenticatedOptions : unauthenticatedOptions}\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://git.heroku.com/ga-running-log.git',\n  development: 'http://localhost:8000'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (credentials) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up/',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = (user) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password/',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Token ${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignUp extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignUp = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signUp(this.state)\n    .then(() => signIn(this.state))\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '', passwordConfirmation: '' })\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password, passwordConfirmation } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={this.onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignUp)\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignIn extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignIn = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signIn(this.state)\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '' })\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={this.onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignIn)\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nclass SignOut extends Component {\n  componentDidMount () {\n    const { msgAlert, history, clearUser, user } = this.props\n\n    signOut(user)\n      .finally(() =>\n        msgAlert({\n          heading: 'Signed Out Successfully',\n          message: signOutSuccess,\n          variant: 'success'\n        })\n      )\n      .finally(() => history.push('/'))\n      .finally(() => clearUser())\n  }\n\n  render () {\n    return ''\n  }\n}\n\nexport default withRouter(SignOut)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass ChangePassword extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      oldPassword: '',\n      newPassword: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonChangePassword = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, user } = this.props\n\n  changePassword(this.state, user)\n    .then(() =>\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ oldPassword: '', newPassword: '' })\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { oldPassword, newPassword } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={this.onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(ChangePassword)\n","import React from 'react'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst RunForm = ({ run, handleSubmit, handleChange }) => (\n  <Form onSubmit={handleSubmit}>\n    <Form.Group controlId='distance'>\n      <Form.Label>Distance</Form.Label>\n      <Form.Control\n        required\n        name='distance'\n        value={run.distance}\n        placeholder='How far did you run?'\n        onChange={handleChange}\n      />\n    </Form.Group>\n    <Form.Group controlId='shoe'>\n      <Form.Label>Shoe</Form.Label>\n      <Form.Control\n        onChange={handleChange}\n        required\n        name='shoe'\n        value={run.shoe}\n        placeholder='What shoe did you run in?'\n      />\n    </Form.Group>\n    <Form.Group controlId='difficult'>\n      <Form.Label>Difficult</Form.Label>\n      <Form.Control\n        onChange={handleChange}\n        required\n        name='difficult'\n        value={run.difficult}\n        placeholder='Did you consider this run difficult?'\n      />\n    </Form.Group>\n    <Button type='submit'>Submit</Button>\n  </Form>\n)\n\nexport default RunForm\n","// apiUrl will be either the production or development url defined\n// in the apiConfig.js file\nimport apiUrl from '../apiConfig'\nimport axios from 'axios'\n\n// Create Run Request\n// assume that `data` is an object with `distance` and `shoe`\n// { distance: 'something', shoe: 'someone' }\nexport const createRun = (data, user) => {\n  return axios({\n    url: apiUrl + '/runs/',\n    method: 'post',\n    data: { run: data },\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\n// Index request\n// no data, we will need a token\nexport const indexRuns = (user) => {\n  return axios({\n    // method key sets the HTTP verb/method for this request\n    // GET is the default method, so we can include or not up to us\n    method: 'GET',\n    url: apiUrl + '/runs',\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\n// GET /runs/:id\nexport const showRun = (id, user) => {\n  return axios({\n    url: apiUrl + '/runs/' + id,\n    // method is optional, default is GET\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\n// DELETE /runs/:id\nexport const deleteRun = (id, user) => {\n  return axios({\n    url: apiUrl + '/runs/' + id,\n    method: 'DELETE',\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\n// PATCH /runs/:id\nexport const updateRun = (data, id, user) => {\n  return axios({\n    url: apiUrl + `/runs/${id}/`,\n    method: 'patch',\n    data: { run: data },\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport RunForm from '../shared/RunForm'\n\nimport { createRun } from '../../api/runs'\n\nclass CreateRun extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      distance: '',\n      shoe: '',\n      difficult: ''\n    }\n  }\n\nhandleChange = (event) => {\n  // The event.target of this event will be an input element\n  // Which will have a `name` attribute (key in the state) & a `value` (what the user typed)\n  this.setState({ [event.target.name]: event.target.value })\n}\n\nhandleSubmit = (event) => {\n  event.preventDefault()\n\n  const { user, msgAlert, history } = this.props\n\n  createRun(this.state, user)\n    .then((res) => history.push('/runs/' + res.data.run.id))\n    .then(() =>\n      msgAlert({\n        heading: 'Run Logged!',\n        message: 'Nice work, go check out your run.',\n        variant: 'success'\n      })\n    )\n    .catch((err) => {\n      msgAlert({\n        heading: 'Run log failed :(',\n        message: 'Something went wrong: ' + err.message,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  return (\n    <>\n      <h3>Log your run</h3>\n      <RunForm\n        run={this.state}\n        handleSubmit={this.handleSubmit}\n        handleChange={this.handleChange}\n      />\n    </>\n  )\n}\n}\n\nexport default withRouter(CreateRun)\n","// Reminder: Don't forget to render this component in a route (or AuthenticatedRoute) in App.js\n\n// Imports:\n// - React, Component\nimport React, { Component } from 'react'\n// - Link\nimport { Link } from 'react-router-dom'\n// - indexRuns (or something) (api function)\nimport { indexRuns } from '../../api/runs'\n// - optional messages\n\n// Create a new class inherits from Component\nclass IndexRuns extends Component {\n  // - constructor (set up initial state)\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      // runs: []\n      runs: null\n    }\n  }\n\n  // - lifecycle method (right away when this component renders, make a request for all the runs & put em in state)\n  componentDidMount () {\n    const { user, msgAlert } = this.props\n    indexRuns(user)\n      .then((res) => this.setState({ runs: res.data.runs }))\n      .then(() => console.log(this.state.runs))\n      .then(() =>\n        msgAlert({\n          heading: 'Index success',\n          message: 'Here\\'s the runs',\n          variant: 'success'\n        })\n      )\n      .catch((err) =>\n        msgAlert({\n          heading: 'Index failed :(',\n          message: 'Something went wrong: ' + err.message,\n          variant: 'danger'\n        })\n      )\n  }\n\n  // - render - display the runs in the state (optionally: loading message)\n  render () {\n    const { runs } = this.state\n    // This is what prevents the \"cannot read property map of undefined\" or other similar errors because on the first render, `runs` state will be `null`\n    if (runs === null) {\n      return 'Loading...'\n    }\n\n    let runJsx\n    if (runs.length === 0) {\n      runJsx = 'No runs, go create some'\n    } else {\n      // I want runJsx to be a bunch of li or Link or something with all my runs info in them\n      // .map gives us back a new array that we can display\n      runJsx = runs.map((run) => (\n        <li key={run.id}>\n          <Link to={`/runs/${run.id}`}>{run.distance}</Link>\n        </li>\n      ))\n    }\n\n    return (\n      <>\n        <h3>Runs Logged:</h3>\n        {runJsx}\n      </>\n    )\n  }\n}\n\nexport default IndexRuns\n// export - don't forget!\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n// API request\nimport { showRun, deleteRun } from '../../api/runs'\n\nimport Button from 'react-bootstrap/Button'\n\nclass ShowRun extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      // using null as a starting value will help us manage the \"loading state\" of our ShowRun component\n      run: null\n    }\n  }\n\n  componentDidMount () {\n    // one of the automatic router props we get is the match object - that has data about the params in our front-end route url\n    const { match, user, msgAlert } = this.props\n\n    showRun(match.params.id, user)\n      .then((res) => this.setState({ run: res.data.run }))\n      .then(() =>\n        msgAlert({\n          heading: 'Show run success',\n          message: 'Check out the run',\n          variant: 'success'\n        })\n      )\n      .catch((err) =>\n        msgAlert({\n          heading: 'Show run failed :(',\n          message: 'Something went wrong: ' + err.message,\n          variant: 'danger'\n        })\n      )\n  }\n\nhandleDelete = (event) => {\n  const { match, user, msgAlert, history } = this.props\n  deleteRun(match.params.id, user)\n  // Redirect to the list of runs\n    .then(() => history.push('/runs'))\n    .then(() =>\n      msgAlert({\n        heading: 'Delete run successfully',\n        message: 'Run is no more',\n        variant: 'success'\n      })\n    )\n    .catch((err) =>\n      msgAlert({\n        heading: 'Delete run failed :(',\n        message: 'Something went wrong: ' + err.message,\n        variant: 'danger'\n      })\n    )\n}\n\nrender () {\n  if (this.state.run === null) {\n    return 'Loading...'\n  }\n\n  // Get the owner (a user id) from the run state\n  const { distance, shoe, difficult, owner } = this.state.run\n  const { history, match, user } = this.props\n\n  return (\n    <>\n      <h3>Show One Run Page</h3>\n      <h5>{distance}</h5>\n      <p>Ran in: {shoe}, and felt {difficult} that it was difficult.</p>\n      {/* Compare the signed in user's ID against the owner of this run */}\n      {user.id === owner && (\n        <>\n          <Button onClick={this.handleDelete}>Delete This Run</Button>\n          {/* Provide the Button a `onClick` handler & use the history object to redirect the user */}\n          <Button\n            onClick={() => history.push(`/runs/${match.params.id}/edit`)}>\n            Update Run\n          </Button>\n        </>\n      )}\n    </>\n  )\n}\n}\n\nexport default withRouter(ShowRun)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n// API request\nimport { updateRun, showRun } from '../../api/runs'\nimport RunForm from '../shared/RunForm'\n\nclass UpdateRun extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      // using null as a starting value will help us manage the \"loading state\" of our UpdateRun component\n      run: { // this should not be null\n        distance: '', // must provide starting values for the form inputs\n        shoe: '',\n        difficult: ''\n      }\n    }\n  }\n\n  componentDidMount () {\n    // one of the automatic router props we get is the match object - that has data about the params in our front-end route url\n    const { match, user, msgAlert } = this.props\n\n    showRun(match.params.id, user)\n      .then(res => this.setState({ run: res.data.run }))\n      .then(() => msgAlert({\n        heading: 'Show run success',\n        message: 'Check out the run',\n        variant: 'success'\n      }))\n      .catch(err => msgAlert({\n        heading: 'Show run failed :(',\n        message: 'Something went wrong: ' + err.message,\n        variant: 'danger'\n      }))\n  }\n\n  handleChange = (event) => {\n    // because `this.state.run` is an object with multiple keys, we have to do some fancy updating\n    const userInput = { [event.target.name]: event.target.value }\n    this.setState(currState => {\n      // \"Spread\" out current run state key/value pairs, then add the new one at the end\n      // this will override the old key/value pair in the state but leave the others untouched\n      return { run: { ...currState.run, ...userInput } }\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n\n    const { user, msgAlert, history, match } = this.props\n\n    updateRun(this.state.run, match.params.id, user)\n      .then(res => history.push('/runs/' + match.params.id))\n      .then(() => msgAlert({ heading: 'Run Updated!', message: 'Nice work, go check out your run.', variant: 'success' }))\n      .catch(err => {\n        msgAlert({\n          heading: 'Run update failed :(',\n          message: 'Something went wrong: ' + err.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  render () {\n    return (\n      <>\n        <h3>Update Run</h3>\n        <RunForm\n          run={this.state.run}\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n        />\n      </>\n    )\n  }\n}\n\nexport default withRouter(UpdateRun)\n","/* eslint-disable no-tabs */\nimport React, { Component, Fragment } from 'react'\nimport { Route } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport CreateRun from './components/runs/CreateRun'\nimport IndexRuns from './components/runs/IndexRuns'\nimport ShowRun from './components/runs/ShowRun'\nimport UpdateRun from './components/runs/UpdateRun'\n\nclass App extends Component {\n  // set the state in the constructor\n  // constructor function sets up the component for the first time\n  // with any initial data\n  // NOT react specific - vanilla JS\n  constructor (props) {\n    // takes props from constructor and passes them to super\n    // brings in parent constructor\n    // allows us to override things setup by the Component class\n    super(props)\n    this.state = {\n      user: null,\n      msgAlerts: []\n    }\n  }\n\n  setUser = (user) => this.setState({ user })\n\n  clearUser = () => this.setState({ user: null })\n\n  deleteAlert = (id) => {\n    this.setState((state) => {\n      return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\n    })\n  }\n\n  msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    this.setState((state) => {\n      return {\n        msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\n      }\n    })\n  }\n\n  render () {\n    const { msgAlerts, user } = this.state\n\n    return (\n      <Fragment>\n\t      <Header user={user} />\n\t      {msgAlerts.map((msgAlert) => (\n          <AutoDismissAlert\n            key={msgAlert.id}\n            heading={msgAlert.heading}\n            variant={msgAlert.variant}\n            message={msgAlert.message}\n            id={msgAlert.id}\n            deleteAlert={this.deleteAlert}\n          />\n        ))}\n\t      <main className='container'>\n\t        <Route\n            path='/sign-up'\n            render={() => (\n              <SignUp msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <Route\n            path='/sign-in'\n            render={() => (\n              <SignIn msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/sign-out'\n            render={() => (\n              <SignOut\n                msgAlert={this.msgAlert}\n                clearUser={this.clearUser}\n                user={user}\n              />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/change-password'\n            render={() => (\n              <ChangePassword msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/create-run'\n            render={() => (\n              <CreateRun msgAlert={this.msgAlert} user={user}/>\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            exact\n            path='/runs'\n            render={() => <IndexRuns msgAlert={this.msgAlert} user={user}/>}\n          />\n          <AuthenticatedRoute\n            user={user}\n            exact\n            path='/runs/:id'\n            render={() => (\n              <ShowRun user={user} msgAlert={this.msgAlert}/>\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/runs/:id/edit'\n            render={() => (\n              <UpdateRun user={user} msgAlert={this.msgAlert}/>\n            )}\n          />\n        </main>\n      </Fragment>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}